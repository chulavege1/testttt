{"version":3,"sources":["webpack:///./src/Code/Components/Content/Repay/Repay_Main_Content.js","webpack:///./src/Code/Components/Content/Repay/Repay_Header.js","webpack:///./src/Code/Components/Content/Repay/Repay.js","webpack:///./src/Code/Components/base/UsdPrice/UsdPrice.js","webpack:///./src/Code/helpers/symbol_formated/numberWithPoints.js","webpack:///./src/Code/Components/Content/poolData-helpers/AaveAction.jsx","webpack:///./src/Code/Components/base/Transaction_status/Transaction_status.js"],"names":["Web3","require","Repay_Main_Content","selectedProvider","web3Modal","injectedProvider","loadWeb3Modal","useParams","underluing","symbol","amount","max","useContentContextState","setUserAccountData","setPoolDataState","setOnePoolDataState","setUserAssetDataContext","contracts","actionTransactionDataState","assetDataOneReserves","transactionReceipt","transactionHash","userAccountData","lendingPoolContract","isMobile","LENDING_POOL_ADDRESS","useStaticPoolDataContext","setIsMobileWidthVersion","className","type","useState","value","setValue","useEffect","input","placeholder","maxlength","decimals","onChange","e","_reserveCurrentBalanceData","currentVariableDebt","variableUserSummToRepay","walletBalanceInHumanityDecimals","target","stalbeUserSummToRepay","setRepayMax","onClick","useInput","amountRepay","setAmountRepay","signer","getSigner","balance","setBalance","getTokenBalance","a","tokenContract","ethers","Contract","IErc20","getAddress","address","balanceOf","_balance","toString","repayMode","setWalletBalanceInHumanityDecimals","console","log","utils","fromWei","inputErorr","setInputError","timer","setTimeout","clearTimeout","mathOptionWithDec","currentStableDebt","history","useHistory","repayMax","priceTokenInEth","priceOracle","resultSummInETH","userTotalCollateralInEth","BigNumber","totalCollateralETH","_hex","totalCollateralAfterSwitchETH","selectActiveBorrowType","calculateHealthFactorFromBalancesBigUnits","totalDebtETH","currentLiquidationThreshold","isLoad","setIsLoad","status","AaveRouteActions","classNameChild","Transaction_status","action","UsdPrice","tableBool","offUsdSymbols","valueCalculate","currentBalanceForUserTokenChildInWei","_transactionHash","push","AaveAction","buttonClassNameChild","divWrapperClassNameChild","assetData","amountFromRouteUrl","swapModeEnabled","BalanceIsStatus","undefined","PlzConnectWalletMan","Repay_Header","reserveOverviewData","RAY","totalLiquidityInUsd","totalBorrowsInUsd","availableLiquidityInUsd","availableLiquidity","stableRateAPY","Number","stableBorrowRate","variableRateAPY","variableBorrowRate","utilizationRate","liquidityRate","actualDebtMode","href","Icon","showImg","showSpan","symbolChild","directory","Infinity","slice","toFixed","onlyAssetPrice","usageAsCollateralEnabled","currentATokenBalance","Repay","length","assetsActiveLength","setSymbol","resultPriceFromOracleInUsdCurrentUserBalance","priceOracleETH","setPriceOracleETH","valCalcPriceOracle","React","memo","every2NumberPoint","x","replace","assetPrice","setLiveAsset","lendingPool","usageAsCollateral","styleChild","apyType","borrowType","apyTypeM","setApyTypeM","buttonText","setButtonText","setTransactionHash","handleModalOk","userAmountSumm","toWei","_amount","_address","erc20TokenContract","_referralCode","deposit","tokenAddress","hash","withdraw","borrow","repay","setUserUseReserveAsCollateral","swapBorrowRateMode","stableRateLastUpdated","approve","modal","onMouseEnter","onMouseLeave","style","position","top","left","background","color","key","width","rel","window","ethereum","chainId"],"mappings":"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","file":"js/5.index.js","sourcesContent":["//\nimport React, { useState, useEffect } from 'react'\nimport { useHistory, useParams } from \"react-router-dom\";\n\nimport { ethers } from \"ethers\";\n\nimport { calculateHealthFactorFromBalancesBigUnits } from '@aave/protocol-js'\nimport { useStaticPoolDataContext } from '~GRAPHQL/static_graph-pool-data-provider_formated';\nimport { useContentContextState } from '~/Code/Components/content_context';\n\nimport { useAaveData } from \"../poolData-helpers/AaveData\"\nimport BalanceIsStatus from '../../base/failures/BalanceIsStatus'\nimport PlzConnectWalletMan from '../../base/failures/PlzConnectWalletMan'\nimport Loader from '~BASE/loader/loader'\n\nimport Icon from '../../base/icon/Icon';\nimport UsdPrice from '../../base/UsdPrice/UsdPrice';\n\nimport BigNumber from 'bignumber.js'\n//\nimport AaveAction from '../poolData-helpers/AaveAction'\nimport AaveRouteActions from '../poolData-helpers/AaveRouteActions'\n\nlet Web3 = require('web3');\nimport { abi as IErc20 } from '~ABIs/abis/erc20.json'\n\n//\nimport Transaction_status from '~BASE/Transaction_status/Transaction_status'\n\n//\nconst Repay_Main_Content = ({ selectedProvider, web3Modal, injectedProvider, loadWeb3Modal }) => {\n//\n    let { underluing, symbol, amount, max } = useParams();\n// Context\n//\n    const { \n        setPoolDataState,\n        setUserAccountData, setUserAssetDataContext,\n        setOnePoolDataState,\n        contracts,\n        actionTransactionDataState\n    } = useContentContextState()\n    const { assetDataOneReserves }= setOnePoolDataState\n    const { transactionReceipt, transactionHash } = actionTransactionDataState\n    const { userAccountData } = setUserAccountData\n    const { lendingPoolContract, LENDING_POOL_ADDRESS } = contracts\n\n    const { setIsMobileWidthVersion } = useStaticPoolDataContext()\n\tconst { isMobile } = setIsMobileWidthVersion\n\n    const [amountRepay, setAmountRepay] = useInput({ className: 'amount__input', type: 'number' })\n//\n    let signer = selectedProvider?.getSigner();\n\n// Check if need approve.\n\t// const [allowanceState, setAllowance] = useState();\n\t// const getAllowanceStatus = async () => {\n\t// \tlet tokenContract = new ethers.Contract(underluing, IErc20, signer);\n\t// \tlet address = await signer.getAddress()\n\t// \tlet _allowance = await tokenContract.allowance(address, LENDING_POOL_ADDRESS)\n\t// \tsetAllowance(_allowance)\n\t// }\n\t// useEffect(() => {\n\t// \tgetAllowanceStatus()\n\t// }, [selectedProvider] )\n\n// State.\n    const [balance, setBalance] = useState();\n    // Get user addres. erc20 balance.\n    const getTokenBalance = async () => {\n        let tokenContract = new ethers.Contract(underluing, IErc20, signer);\n        let address = await signer.getAddress()\n        let _balance = await tokenContract.balanceOf(address)\n        setBalance(+assetDataOneReserves?.decimals === 8 \n            ? _balance.toString() + '0' \n            : _balance.toString())\n    }\n    useEffect(() => {\n        if(assetDataOneReserves) {\n            getTokenBalance();\n        }\n    }, [assetDataOneReserves])\n\n    //\n    let repayMode = +assetDataOneReserves?._reserveCurrentBalanceData.currentVariableDebt !== 0 ? '2' : '1'\n    const [walletBalanceInHumanityDecimals, setWalletBalanceInHumanityDecimals] = useState();\n    console.log('walletBalanceInHumanityDecimals', walletBalanceInHumanityDecimals)\n//\n    useEffect(() => {\n        if(assetDataOneReserves && balance){\n            if(+assetDataOneReserves.decimals === 18) {\n                setWalletBalanceInHumanityDecimals(Web3.utils.fromWei(balance, 'ether'));\n            } else if(+assetDataOneReserves.decimals === 8 ) {\n                setWalletBalanceInHumanityDecimals(Web3.utils.fromWei((balance), 'gwei'));\n            } else if(+assetDataOneReserves.decimals === 6) {\n                setWalletBalanceInHumanityDecimals(Web3.utils.fromWei(balance, 'mwei'));\n            }\n        }\n    }, [assetDataOneReserves, balance])\n//\n    const [inputErorr, setInputError] = useState()\n//\n    useEffect(() => {\n        if(inputErorr === true){\n            const timer = setTimeout(() => {\n                setInputError(false);\n            }, 400);\n                return () => clearTimeout(timer);\n        }   \n    }, [inputErorr])\n//\n    let mathOptionWithDec = +assetDataOneReserves?.decimals === 18 \n        ? 'ether' \n        : +assetDataOneReserves?.decimals === 8 \n            ? 'gwei' \n            : 'mwei'\n\n    //\n    // let maxAmountToDeposit = new BigNumber(walletBalanceInHumanityDecimals);\n    //   if (walletBalanceInHumanityDecimals && maxAmountToDeposit.gt(0)) {\n    //     // keep it for tx gas cost\n    //     maxAmountToDeposit = maxAmountToDeposit.minus('0.001');\n    //   }\n    //   if (walletBalanceInHumanityDecimals && maxAmountToDeposit.lte(0)) {\n    //     maxAmountToDeposit = valueToBigNumber('0');\n    //   }\n    //   console.log('maxAmountToDeposit', maxAmountToDeposit)\n    \n    let variableUserSummToRepay = assetDataOneReserves &&\n        Web3.utils.fromWei(\n            assetDataOneReserves._reserveCurrentBalanceData.currentVariableDebt.toString(),\n            mathOptionWithDec\n        )\n    let stalbeUserSummToRepay = assetDataOneReserves &&\n        Web3.utils.fromWei(\n            assetDataOneReserves._reserveCurrentBalanceData.currentStableDebt.toString(),\n            mathOptionWithDec\n        )\n    //\n    const history = useHistory();\n\n\n    const [repayMax, setRepayMax] = useState(false)\n\n    function useInput({ className, type }) {\n        const [value, setValue] = useState(amount);\n        useEffect(() => setValue(amount), [amount])\n        //\n        const input = <>\n            <input\n                type={type}\n                placeholder='Amount'\n                className={className}\n                value={value}\n                maxlength={+assetDataOneReserves?.decimals}\n                onChange={e => {\n                    +assetDataOneReserves?._reserveCurrentBalanceData.currentVariableDebt !== 0\n                        ? variableUserSummToRepay > walletBalanceInHumanityDecimals\n                            ? setValue(walletBalanceInHumanityDecimals)\n                            : +e.target.value > +variableUserSummToRepay\n                                ? setValue(e.target.value = variableUserSummToRepay)\n                                : setValue(e.target.value)\n                        : stalbeUserSummToRepay > walletBalanceInHumanityDecimals\n                            ? setValue(walletBalanceInHumanityDecimals)\n                            : +e.target.value > +stalbeUserSummToRepay \n                                ? setValue(e.target.value = stalbeUserSummToRepay)\n                                : setValue(e.target.value)\n                    \n                    , setRepayMax(false)\n                }}\n            />\n            <button className='amount__btn'\n                onClick={() => { \n                    setValue(\n                        +assetDataOneReserves?._reserveCurrentBalanceData.currentVariableDebt !== 0\n                            ? variableUserSummToRepay > walletBalanceInHumanityDecimals\n                                ? walletBalanceInHumanityDecimals\n                                : variableUserSummToRepay\n                            : stalbeUserSummToRepay > walletBalanceInHumanityDecimals\n                                ? walletBalanceInHumanityDecimals\n                                : stalbeUserSummToRepay\n                    )\n                    setRepayMax( \n                        +assetDataOneReserves?._reserveCurrentBalanceData.currentVariableDebt !== 0\n                            ? variableUserSummToRepay > walletBalanceInHumanityDecimals\n                                ? false\n                                : true\n                            : stalbeUserSummToRepay > walletBalanceInHumanityDecimals\n                                ? false\n                                : true\n                    )\n                }\n            }   type=\"button\">Max</button>\n            </>\n        return [value, input];\n    }\n\n\n// Calculate hp factor\n    let priceTokenInEth = assetDataOneReserves && Web3.utils.fromWei(assetDataOneReserves?.priceOracle.toString(), 'ether')\n    let resultSummInETH = amountRepay * priceTokenInEth\n    //\n    let usageCollateralAfterSwitch = true; // Collateral Usage (true || false)\n    let userTotalCollateralInEth = userAccountData && \n        new BigNumber(Web3.utils.fromWei(userAccountData.totalCollateralETH._hex, 'ether')) // User collateral cost in eth\n    //\n    const totalCollateralAfterSwitchETH = userAccountData \n        && userTotalCollateralInEth[\n            usageCollateralAfterSwitch ? 'plus' : 'minus'\n        ](resultSummInETH);\n    //\n    const healthFactorAfterSwitch = userAccountData && calculateHealthFactorFromBalancesBigUnits(\n        totalCollateralAfterSwitchETH,\n        Web3.utils.fromWei(userAccountData?.totalDebtETH.toString(), 'ether'),\n        '0.' + userAccountData?.currentLiquidationThreshold.toString() // CHECK THERE CAN DO BUG\n    );\n\n//\n    const selectActiveBorrowType = +assetDataOneReserves?._reserveCurrentBalanceData.currentVariableDebt > 0\n\t\t? 'Variable'\n\t\t: +assetDataOneReserves?._reserveCurrentBalanceData.currentStableDebt > 0\n\t\t\t? 'Stable'\n\t\t\t: 'None'\n    console.log('healthFactorAfterSwitch', selectActiveBorrowType )\n//\n\n    const [isLoad, setIsLoad] = useState(false)\n    useEffect(() => {\n        setIsLoad(true)\n    }, [])\n\n\n    return (\n\n        assetDataOneReserves && injectedProvider &&\n        selectActiveBorrowType !== 'None' \n            ?\n    <>    \n    <div className={`${ isLoad && assetDataOneReserves ? 'active_block' : 'hidden_block' }`}>\n        <div className='main container active'>\n       \n            <div className={`${transactionReceipt.status === 1 ? 'borderGreen' : ''} col card grow-1`}>\n\n                {/* @@include(\"../blocks/modules/btn-back-card/btn-back.html\") */}\n                <AaveRouteActions type={'back'} classNameChild={\"btn btn--red btn--small\"}  />\n\n                \n\n                <div className={`${ isLoad && assetDataOneReserves ? 'ahashakeheartache' : '' } card__content card__content--md p-60-24 m-auto`}>\n\n                    <Transaction_status \n                        action={'Repay'}\n                    />\n                \n                    <div className=\"detail__body\">\n                        <div className=\"grid-row grid-row--mb-40\">\n\n                            { !isMobile && \n                                <div className=\"grid-row__left flex-col\">\n                                    <div className=\"label label--md\">\n                                        {amount ? 'Repay' : 'Available to repay'}\n                                    </div>\n                                </div>\n                            }\n\n                            {/* <div>\n                                { healthFactorAfterSwitch?.toString() }\n                            </div> */}\n\n                            <div className=\"grid-row__right\">\n                            <div className='flex-col'>\n\n                            { isMobile && \n                                <div className=\"label label--md\">\n                                    {amount ? 'Repay' : 'Available to repay'}\n                                </div>\n                            }\n\n                                <div className=\"value\">{ \n                                    !amount \n                                        ?\n                                            +assetDataOneReserves?._reserveCurrentBalanceData.currentVariableDebt !== 0\n                                                ? variableUserSummToRepay > walletBalanceInHumanityDecimals\n                                                    ? walletBalanceInHumanityDecimals\n                                                    : variableUserSummToRepay\n                                                : stalbeUserSummToRepay > walletBalanceInHumanityDecimals\n                                                    ? walletBalanceInHumanityDecimals\n                                                    : stalbeUserSummToRepay \n                                        : amount\n                                    }\n                                </div>\n                                <div className=\"label\">\n                                { assetDataOneReserves && \n                                    <UsdPrice \n                                        tableBool={true} \n                                        decimals={+assetDataOneReserves?.decimals}\n                                        offUsdSymbols={false} \n                                        valueCalculate={assetDataOneReserves?.priceOracle.toString()} \n                                        selectedProvider={selectedProvider}\n                                        currentBalanceForUserTokenChildInWei={ \n                                            !amount \n                                                ?\n                                                +assetDataOneReserves?._reserveCurrentBalanceData.currentVariableDebt !== 0\n                                                    ? variableUserSummToRepay > walletBalanceInHumanityDecimals\n                                                        ? walletBalanceInHumanityDecimals\n                                                        : variableUserSummToRepay\n                                                    : stalbeUserSummToRepay > walletBalanceInHumanityDecimals\n                                                        ? walletBalanceInHumanityDecimals\n                                                        : stalbeUserSummToRepay\n                                                : amount\n                                        } \n                                    /> \n                                }\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                        <div className=\"grid-row grid-row--mb-40\">\n                            <div className=\"grid-row__base\">\n                                <div className=\"progress\">\n                                    <ul className={`progress__steps \n                                        ${ transactionReceipt.status === 1 \n                                                ? 'step-3'\n                                                : transactionHash?._transactionHash\n                                                    ? 'step-2'\n                                                    : 'step-1'\n                                        }`}>\n                                            <li></li>\n                                            <li></li>\n                                            <li></li>\n                                            <li></li>\n                                            <li></li>\n                                    </ul>\n\n                                    <ul className=\"progress__labels\">\n                                        {/* {allowanceState.toString() !== '0'\n                                            ? '' \n                                            : <li className=\"label--md label--dark\">Aprove</li>\n                                        } */}\n                                            <li className=\"label--md label--dark\">Repay</li>\n                                            <li className=\"label--md label--dark\">Finished</li>\n                                    </ul>\n\n                                </div>\n                            </div>\n                        </div>\n\n                    \n                        {(transactionReceipt.status === 1 || transactionHash?._transactionHash) ? null : \n                            <>\n                                    <div className=\"grid-row__base\">\n                                        <div className={`amount mb-10 mt-10 ${inputErorr ? `ahashakeheartache` : ''}`}>\n                                            {setAmountRepay}\n                                        </div>\n                                            { amountRepay &&\n                                                <UsdPrice\n                                                    classNameChild={'posa'}\n                                                    tableBool={true} \n                                                    decimals={+assetDataOneReserves?.decimals}\n                                                    offUsdSymbols={false} \n                                                    valueCalculate={assetDataOneReserves?.priceOracle.toString()} \n                                                    selectedProvider={selectedProvider}\n                                                    currentBalanceForUserTokenChildInWei={amount && amountRepay === amount\n                                                        ? amount.toString()\n                                                        : amountRepay\n                                                            ? amountRepay && amountRepay\n                                                            : +assetDataOneReserves?._reserveCurrentBalanceData.currentStableDebt !== 0 \n                                                                ? Web3.utils.fromWei(assetDataOneReserves?._reserveCurrentBalanceData.currentStableDebt.toString(), 'ether')\n                                                                : Web3.utils.fromWei(assetDataOneReserves?._reserveCurrentBalanceData.currentVariableDebt.toString(), 'ether')\n                                                    } \n                                                /> \n                                            }\n                                        \n                                    </div>\n                                \n                            </>\n                        }\n\n                    \n                        <div className='grid-row mt-40'>\n                            <div className='grid-row__left'></div>\n                                {/* {allowanceState && allowanceState.toString() === '0'  */}\n                                    {/* ? <div className='grid-row__left'>\n                                        <div className=\"\">Approve</div>\n                                        <p className='label label--wrap'>Please approve before repay</p>\n                                    </div>  */}\n                                     <div className='grid-row__left flex-column text-left'>\n                                        {transactionReceipt.status === 1 ? null : <div className=\"\">Repay</div>}\n                                        <p className='label label--wrap'>\n                                            { transactionReceipt.status === 1 \n                                                ? 'You transaction has succefull' \n                                                : transactionHash?._transactionHash \n                                                    ? 'Wait you transaction has sent' \n                                                    : 'Submit to repay'\n                                            }\n                                        </p>\n                                    </div>\n                                {/* } */}\n\n                                <div className='grid-row__right a-end'>\n                                    {transactionReceipt.status === 1 \n                                        ? '' \n                                        : <>\n                                            { +amountRepay !== 0 && +amount !== +amountRepay &&\n                                                <button \n                                                    className='btn btn--red btn--big ' \n                                                    onClick={ () => { \n                                                        typeof(amountRepay) !== 'undefined' \n                                                            ? history.push(`/repay/${symbol}/${underluing}/${amountRepay}${repayMax ? '/-1' : ''}`)\n                                                            : setInputError(true)\n                                                        } }>\n                                                    Continue\n                                                </button>\n                                            }\n                                            \n                                            {transactionReceipt.status === 1 || transactionHash?._transactionHash\n                                                ? <Loader /> \n                                                : amount && +amount === +amountRepay &&\n                                                    <AaveAction\n                                                        type={'repay'} \n                                                        buttonClassNameChild=\"btn btn--red btn--small\"\n                                                        divWrapperClassNameChild='text-center'\n                                                        assetData={assetDataOneReserves}  \n                                                        signer={signer} \n                                                        amountFromRouteUrl={ max \n                                                            ? max?.toString() === '-1' && '-1' \n                                                            : amountRepay\n                                                        } \n                                                        lendingPoolContract={lendingPoolContract} \n                                                        userAccountData={userAccountData}  \n                                                        swapModeEnabled={false}\n                                                        selectedProvider={selectedProvider}\n                                                        repayMode={repayMode}\n                                                    />\n                                            }\n                                        </>\n                                    }\n                                </div>\n\n                            </div>\n                    </div>\n\n                    \n                </div>\n            </div>\n\n{/* ... */}\n\n\n        </div>\n        </div>\n    </>\n        : !injectedProvider \n            ? <PlzConnectWalletMan loadWeb3Modal={loadWeb3Modal} web3Modal={web3Modal} /> \n            : <BalanceIsStatus\n                walletBalanceInHumanityDecimals={\n                    stalbeUserSummToRepay?.toString() === '0' || variableUserSummToRepay?.toString() === '0'\n                        ? 0\n                        : undefined\n                }\n                selectedProvider={selectedProvider} \n                web3Modal={web3Modal} \n                action={'repay'}\n            />\t\t\t\t\t\t\t\t\n        \n    )\n}\n\n\n\n\n\n\n\n\nexport default Repay_Main_Content","//\nimport React, { useState, useEffect } from 'react'; import { useParams } from \"react-router-dom\";\n// Store.\nimport UsdPrice from '../../base/UsdPrice/UsdPrice';\n\nimport { useContentContextState } from '~/Code/Components/content_context';\n\n//\nimport Icon from '../../base/icon/Icon';\nimport { every2NumberPoint, every3NumberCommas } from '~HELPERS/symbol_formated/numberWithPoints'\n\nimport { formatUnits, formatEther } from \"@ethersproject/units\"\nimport Web3 from 'web3';\n//\nconst Repay_Header = ({ selectedProvider }) => {\n//\n    const { symbol } = useParams();\n//\n\tconst { setOnePoolDataState } = useContentContextState();\n    const { assetDataOneReserves } = setOnePoolDataState\n\n    \n\n    let totalLiquidityInUsd, totalBorrowsInUsd, availableLiquidityInUsd, \n    reserveOverviewData, assetPrice;\n\n    let RAY = 10**27 // 10 to the power 27\n\n    if (assetDataOneReserves) {\n        // totalLiquidityInUsd = valueToBigNumber(assetData.totalLiquidity)\n        //     .multipliedBy(Web3.utils.fromWei(assetData.price.priceInEth, 'ether'))\n        //     .dividedBy(usdPrice.priceOracle.usdPriceEth)\n        //     .toString();\n        // totalBorrowsInUsd = valueToBigNumber(assetData.totalCurrentVariableDebt)\n        //     .multipliedBy(Web3.utils.fromWei(assetData.price.priceInEth, 'ether'))\n        //     .dividedBy(usdPrice.priceOracle.usdPriceEth)\n        //     .toString();\n        // availableLiquidityInUsd = valueToBigNumber(assetData.availableLiquidity)\n        //     .multipliedBy(Web3.utils.fromWei(assetData.price.priceInEth, 'ether'))\n        //     .dividedBy(usdPrice.priceOracle.usdPriceEth)\n        //     .toString();\n        assetPrice = assetDataOneReserves?.priceOracle.toString();\n        reserveOverviewData = {\n            totalLiquidityInUsd,\n            totalBorrowsInUsd,\n            availableLiquidityInUsd,\n            // totalLiquidity: assetData.totalLiquidity,\n            // totalBorrows: assetData.totalCurrentVariableDebt,\n            availableLiquidity: Web3.utils.fromWei(assetDataOneReserves.availableLiquidity.toString(), (+assetDataOneReserves.decimals === 18 ? 'ether' : +assetDataOneReserves.decimals === 8 ? 'gwei' : 'mwei')),\n            // liquidityRate: assetData.liquidityRate,\n            // avg30DaysLiquidityRate: assetData.avg30DaysLiquidityRate,\n            stableRateAPY: (Number(assetDataOneReserves.stableBorrowRate) / RAY),\n            variableRateAPY: (Number(assetDataOneReserves.variableBorrowRate) / RAY),\n            // stableOverTotal: valueToBigNumber(assetData.totalStableDebt)\n                // .dividedBy(assetData.totalDebt)\n                // .toNumber(),\n            // variableOverTotal: valueToBigNumber(assetData.totalVariableDebt)\n            //     .dividedBy(assetData.totalDebt)\n            //     .toNumber(),\n            // avg30DaysVariableRate: assetData.avg30DaysVariableBorrowRate,\n            utilizationRate: Number(assetDataOneReserves.liquidityRate) / Web3.utils.fromWei(assetDataOneReserves.availableLiquidity.toString(), (+assetDataOneReserves.decimals === 18 ? 'ether' : +assetDataOneReserves.decimals === 8 ? 'gwei' : 'mwei')),\n            // baseLTVasCollateral: assetData.baseLTVasCollateral,\n            // liquidationThreshold: assetData.reserveLiquidationThreshold,\n            // liquidationBonus: assetData.reserveLiquidationBonus,\n            // usageAsCollateralEnabled: assetData.usageAsCollateralEnabled,\n            // stableBorrowRateEnabled: assetData.stableBorrowRateEnabled,\n            // borrowingEnabled: assetData.borrowingEnabled,\n        };\n    }\n\n\n//\n    let mathOptionWithDec = +assetDataOneReserves?.decimals === 18\n        ? 'ether'\n        : +assetDataOneReserves?.decimals === 8\n            ? 'gwei'\n            : 'mwei'\n\n//\n    const [isLoad, setIsLoad] = useState(false)\n    useEffect(() => {\n        setIsLoad(true)\n    }, [])\n\n    let actualDebtMode = assetDataOneReserves \n        ? +assetDataOneReserves?._reserveCurrentBalanceData.currentStableDebt > 0\n            ? Web3.utils.fromWei(\n                assetDataOneReserves._reserveCurrentBalanceData.currentStableDebt.toString(),\n                mathOptionWithDec\n            )\n            : Web3.utils.fromWei(\n                assetDataOneReserves?._reserveCurrentBalanceData.currentVariableDebt.toString(),\n                mathOptionWithDec\n            )\n        : 0\n    console.log('assetDataOneReserves?._reserveCurrentBalanceData', actualDebtMode)\n//\n   \n\n    return (\n\n        assetDataOneReserves ?\n        <div className={`${ isLoad && assetDataOneReserves ? 'active_block' : 'hidden_block' }`}>\n        <div className=\"container\">\n\t\t\t<div className=\"col card mb-30\">\n            <div className=\"card__top card-top\">\n            <div className=\"card-top__left\">\n                <div className=\"value\">Repay { symbol }</div>\n            </div>\n            <div className=\"card-top__center hidden-md\">\n                <a href=\"\" className=\"altcoin altcoin--card-top \">\n                    <div className=\"altcoin__name value\">{ symbol } Reserve overview</div>\n                    <Icon showImg={true} showSpan={false} symbolChild={symbol} directory={'/assets-main'} />\n                </a>\n            </div>\n            <div className=\"card-top__right\">\n                {/* <button className={`expand  ${ !isLoad ? 'active' : ''}` } onClick={() => setMinimaze(prevstate => ( !prevstate )) } >\n                    {isLoad ? 'Expand' : 'Minimize'}\n                    <div className=\"expand__icon\">\n                        <span></span>\n                    </div>\n                </button> */}\n            </div>\n        </div>\n        {/* <!-- card-top --> */}\n        { isLoad &&\n        <div className=\"top-content__wrapper\">\n            <div className=\"top-content__body top-content__body--deposit\">\n                <div className=\"top-content__col\">\n                    <div className=\"label label--md mb-5\">Utilization rate</div>\n                    <div className=\"value\">{reserveOverviewData.utilizationRate !== undefined && reserveOverviewData.utilizationRate !==  Infinity \n                        ? Number(reserveOverviewData.utilizationRate.toString().slice(0, 10)).toFixed(2)\n                        : '-' } {reserveOverviewData.utilizationRate !== undefined && reserveOverviewData.utilizationRate !== Infinity && reserveOverviewData.utilizationRate && '%'} \n                        <span className=\"remainder\"> </span>\n                    </div>\n                </div>\n                <div className=\"top-content__col\">\n                    <div className=\"label label--md mb-5\">Available liquidity</div>\n                    <div className=\"value\">{ Number(reserveOverviewData.availableLiquidity).toFixed(5) } {symbol} </div>\n                </div>\n                <div className=\"top-content__col\">\n                    <div className=\"label label--md mb-5\">Asset price</div>\n                    <div className=\"value\">\n                        <UsdPrice \n                            tableBool={true}\n                            onlyAssetPrice={true}\n                            decimals={+assetDataOneReserves?.decimals}\n                            // currentBalanceForUserTokenChildInWei={onePriceState}\n                            offUsdSymbols={false} \n                            valueCalculate={assetDataOneReserves?.priceOracle.toString()}\n                            selectedProvider={selectedProvider}\n                        />\n                     </div>  \n                </div>\n                {/* <div className=\"top-content__col\">\n                    <div className=\"label label--md\">Stable borrow APR</div>\n                        <div className=\"value value--red\">{reserveOverviewData.stableRateAPY.toString().substring(0, 4)}</div> \n                </div>\n                <div className=\"top-content__col\">\n                    <div className=\"label label--md\">Variable borrow APR</div>\n                        <div className=\"value value--blue\">{ reserveOverviewData.variableRateAPY.toString().substring(0, 4) }</div>\n                </div> */}\n\n                <div className=\"top-content__col\">\n                    <div className=\"label label--md mb-5\">Collateral composition</div>\n                    <div className=\"value value--green\">{ assetDataOneReserves?.usageAsCollateralEnabled ? 'Yes' : 'No' }</div>\n                </div>\n\n\n                <div className=\"top-content__col\">\n                    <div className=\"label label--md mb-5\">You borrowed</div>\n                        <div className=\"value\">{ \n                            <UsdPrice \n                                tableBool={true}\n                                onlyAssetPrice={true}\n                                decimals={+assetDataOneReserves.decimals}\n                                offUsdSymbols={false}\n                                valueCalculate={assetDataOneReserves?.priceOracle.toString()}\n                                currentBalanceForUserTokenChildInWei={actualDebtMode}\n                                selectedProvider={selectedProvider}\n                            />\n                     \n                        }\n                        </div>\n                </div>\n                \n            </div>\n        </div>\n    }\n            \n                {/* <!-- card-content --> */}\n                <div className=\"card-top__content\">\n                    <div className=\"top-content__wrapper\">\n\n                    {/* <div className=\"top-content__col\">\n                        <div className=\"label label--md mb-5\">Wallet balance</div>\n                        <div className=\"value\">{ every3NumberCommas(assetDataOneReserves.availableLiquidity.toString().substring(0, 12)) + (assetDataOneReserves.availableLiquidity.toString().substring(12, 14)) } {symbol}</div>\n                    </div> */}\n\n                    {/* <div className=\"top-content__col\">\n                        <div className=\"label label--md mb-5\">Your collateral</div>\n                        <div className=\"value\">{ every2NumberPoint(parseFloat(formatUnits(assetDataOneReserves.liquidityRate, 25)).toFixed(2) + \"%\") }</div>\n                    </div> */}\n\n\n                    {/* <div className=\"top-content__col\">\n                        <div className=\"label label--md mb-5\">Loan to value</div>\n                        <div className=\"value\"><UsdPrice tableBool={false} offUsdSymbols={true} valueCalculate={assetPrice} selectedProvider={selectedProvider} /></div>\n                    </div> */}\n\n\n            { !isLoad && \n                <div className=\"card-top__detail top-detail\">\n                    <div className=\"top-detail__body\">\n                        <div className=\"top-detail__left\">\n\n                            <div className=\"top-detail__col\">\n                                {/* <!--  --> */}\n                                <div className=\"grid-row\">\n                                    <div className=\"top-content__col\">\n                                        <div className=\"label label--md mb-5\">Deposits balance</div>\n                                            <div className=\"value\">{ assetDataOneReserves \n                                                ? (Number(Web3.utils.fromWei(assetDataOneReserves._reserveCurrentBalanceData.currentATokenBalance.toString(), mathOptionWithDec))  + ' ' + symbol)\n                                                : '-' \n                                            }\n                                            </div>\n                                    </div>\n                                </div>\n                                {/* <!--  --> */}\n                                {/* <div className=\"grid-row\">\n                                    <div className=\"grid-row__left\">\n                                        <div className=\"label label--md\">Wallet balance</div>\n                                    </div>\n                                    <div className=\"grid-row__right\">\n                                        <div className=\"value\">{ every3NumberCommas(assetDataOneReserves.availableLiquidity.toString().substring(0, 12)) + (assetDataOneReserves.availableLiquidity.toString().substring(12, 14)) } {symbol}</div>\n                                    </div>\n                                </div> */}\n                                {/* <!--  --> */}\n\n                                {/* <div className=\"grid-row grid-row--gap-b-0\">\n                                    <div className=\"grid-row__left\">\n                                        <div className=\"label label--md\">Your collateral</div>\n                                    </div>\n                                    <div className=\"grid-row__right\">\n                                        <div className=\"value\">{ every2NumberPoint(parseFloat(formatUnits(assetDataOneReserves.liquidityRate, 25)).toFixed(2) + \"%\") }</div>\n                                    </div>\n                                </div> */}\n\n                                    {/* <div className=\"grid-row__left\">\n                                        <div className=\"label\">Past 30 day average</div>\n                                    </div> */}\n                                    \n                                    <div className=\"grid-row__right\">\n                                        {/* <div className=\"value value--sm\">{ assetDataOneReserves.avg30DaysLiquidityRate?.substring(0, 4) || '-' }</div> */}\n                                    </div>\n                                </div>\n                                {/* <!--  --> */}\n                                <div className=\"grid-row\">\n                                    {/* <div className=\"grid-row__left\">\n                                        <div className=\"label label--md\">Health factor</div>\n                                    </div> */}\n                                    <div className=\"grid-row__right\">\n                                        {/* <div className=\"value value--green\">{ assetDataOneReserves.usageAsCollateralEnabled ? 'Yes' : 'No' }</div> */}\n                                    </div>\n                                </div>\n                            </div>\n\n\n                            <div className=\"top-detail__col\">\n                                {/* <!--  --> */}\n                                {/* <div className=\"grid-row grid-row--gap-b-0\">\n                                    <div className=\"grid-row__left\">\n                                        <div className=\"label label--md\">Your collateral</div>\n                                    </div>\n                                    <div className=\"grid-row__right\">\n                                        <div className=\"value\">{ every2NumberPoint(parseFloat(formatUnits(assetDataOneReserves.liquidityRate, 25)).toFixed(2) + \"%\") }</div>\n                                    </div>\n                                </div> */}\n\n\n                                {/* <!--  --> */}\n                                {/* <div className=\"grid-row grid-row--gap-b-0\">\n                                    <div className=\"grid-row__left\">\n                                        <div className=\"label label--md\">Your collateral</div>\n                                    </div>\n                                    <div className=\"grid-row__right\">\n                                        <div className=\"value\">{ every2NumberPoint(parseFloat(formatUnits(assetDataOneReserves.liquidityRate, 25)).toFixed(2) + \"%\") }</div>\n                                    </div>\n                                </div> */}\n\n                            </div>\n\n                        </div>\n                    </div>\n            }\n        \n                        </div>\n                    </div>       \n                </div>\n            </div>\n\n        </div>\n\n        : ''\n    )\n    \n}\n\n\n\n\n\n\n\nexport default Repay_Header","//\nimport React, { useState, useEffect } from 'react'\nimport { useParams } from \"react-router-dom\";\nimport { useContentContextState } from '~/Code/Components/content_context';\n//\nimport Repay_Main_Content from './Repay_Main_Content'\nimport Repay_Header from './Repay_Header'\n//\nconst Repay = ({ selectedProvider, web3Modal, injectedProvider, loadWeb3Modal }) => {\n//\n\tconst { symbol } = useParams()\n\tconst { setOnePoolDataState, setPoolDataState } = useContentContextState();\n\tconst { assetData } = setPoolDataState\n\t//\n\tuseEffect(() => {\n\t\tif(assetData?.length === setPoolDataState.assetsActiveLength && setOnePoolDataState.assetDataOneReserves?.symbol !== symbol){\n\t\t\tsetOnePoolDataState.setSymbol(symbol)\n\t\t\tconsole.log('walletBalanceInHumanityDecimals')\n\t\t}\n\t}, [assetData] )\n\n//\n    return (\n        <>\n            <Repay_Header selectedProvider={selectedProvider} />\n\t\t\t<Repay_Main_Content \n                selectedProvider={selectedProvider} \n                web3Modal={web3Modal} \n                loadWeb3Modal={loadWeb3Modal}\n                injectedProvider={injectedProvider}\n            />\n        </>\n    )\n//\n}\n\n\n\n\n\nexport default (Repay)","import React from 'react';\nimport { useContentContextState } from '~/Code/Components/content_context';\n//\nlet Web3 = require('web3');\n// Props Api example.\n    // tableBool={true} decimals={value.decimals} currentBalanceForUserTokenChildInWei={token.balancee}\n    // offUsdSymbols={false} valueCalculate={value.price.priceInEth} selectedProvider={selectedProvider}\n//\nconst UsdPrice = ({\n    classNameChild,\n    valueCalculate, \n    tableBool, \n    offUsdSymbols,\n    currentBalanceForUserTokenChildInWei,\n}) => {\n// Context.\n    const { setPriceOracleETH } = useContentContextState();\n    const { priceOracleETH } = setPriceOracleETH\n//\n    let resultPriceFromOracleInUsdCurrentUserBalance;\n//\n    if(priceOracleETH) {\n        console.log('valCalcPriceOracle', priceOracleETH)\n        // Token price.\n        let valCalcPriceOracle = valueCalculate\n            ? Web3.utils.fromWei(valueCalculate.toString(), 'ether') \n            : 0\n        let activePriceForOneToken = valCalcPriceOracle * priceOracleETH\n\n        // Result for token price.\n        resultPriceFromOracleInUsdCurrentUserBalance = currentBalanceForUserTokenChildInWei // Gives prop with current balance? .\n            ? Number((currentBalanceForUserTokenChildInWei) * activePriceForOneToken).toFixed(2) // Active balance for ETH.\n            : Number(priceOracleETH * valCalcPriceOracle).toFixed(2) // Balance for ETH. \n        //\n    }\n\n//\n    return (\n        <div className={ classNameChild ? classNameChild : '' }>\n            {/* / / */}\n                { tableBool && '$ '}\n            {/* / / */}\n            { \n                // window?.ethereum.chainId === \"0x4\"\n                //     ? valueCalculate.length <= 18 ? resultFormatedValueForOneToken : resultPriceFromOracleInUsdCurrentUserBalance\n                //     : \n                resultPriceFromOracleInUsdCurrentUserBalance \n            }\n            {/* / / */}\n                { !tableBool && offUsdSymbols === undefined ? ' USD' : offUsdSymbols && ' USD' }\n            {/* / / */}\n        </div>\n    )\n//\n}\n\n\n//\nexport default React.memo(UsdPrice)","// Point every two characters.\nfunction every2NumberPoint(x) {\n    return x.toString().replace(/\\B(?=(\\d{2})+(?!\\d))/g, \".\");\n}\nfunction every3NumberCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n}\n\n\n\nexport { every2NumberPoint, every3NumberCommas }\n\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { parseUnits, formatUnits } from \"@ethersproject/units\";\nimport { ethers } from \"ethers\";\nimport { abi as IErc20 } from '~ABIs/abis/erc20.json';\n// Context.\nimport { useStaticPoolDataContext } from '~GRAPHQL/static_graph-pool-data-provider_formated';\nimport { useContentContextState } from '~/Code/Components/content_context';\n\n\nlet Web3 = require('web3');\nimport Loader from '~BASE/loader/loader'\n//\nfunction AaveAction({ swapModeEnabled, amountFromRouteUrl, assetData, signer, type, assetPrice, setLiveAsset, lendingPool, \n  buttonClassNameChild, usageAsCollateral, styleChild, \n  lendingPoolContract, apyType, borrowType, repayMode, usageAsCollateralEnabled }) {\n// - Block data.\n  // const { \n  //   userAccountData, \n  // } = useAaveData({ selectedProvider });\n  // - Context data\n// Get data from route.\n  let { underluing } = useParams();\n  // const [transactingError, setTransactingError] = useState(false)\n  const [apyTypeM, setApyTypeM] = useState()\n  useEffect(() => { setApyTypeM(apyType) }, [apyType])\n  // const [amount] = useState(amountFromRouteUrl)\n  const [buttonText, setButtonText] = useState()\n  useEffect(() => { setButtonText(apyType) }, [apyType])\n\n  // const [useMax, setUseMax] = useState(false)\n  // const [runningTransactions, setRunningTransactions] = useState()\n\n// Text status transaction\n  const { \n    actionTransactionDataState\n  } = useContentContextState()\n  const { \n    setTransactionHash, \n    transactionHash \n  } = actionTransactionDataState\n\n  const { LENDING_POOL_ADDRESS } = useStaticPoolDataContext()\n\n  //\n\t//\n\t\n//\n  const handleModalOk = async () => {\n    // let decimal = (assetData.decimals === 18) ? 'ether' : (assetData.decimals === 6) ? 'mwei' : 'gwei';\n    let mathOptionWithDec = +assetData.decimals === 18 ? 'ether' : +assetData.decimals === 8 ? 'gwei' : 'mwei'\n    let userAmountSumm = amountFromRouteUrl && Web3.utils.toWei(amountFromRouteUrl.toString(), mathOptionWithDec) // !!! FIX THERE !!!!!! 10 ** (17, PAST THERE FIX)!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n    let _amount = amountFromRouteUrl?.toString() === \"-1\" ? \n        type === 'withdraw'\n          ? '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'\n          : '0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' \n      : userAmountSumm\n\n    let _address = await signer.getAddress()\n    let erc20TokenContract = underluing && new ethers.Contract(underluing, IErc20, signer);\n    let hash\n    let _referralCode = '0'.toString()\n\n    if(type === \"deposit\") {\n      hash = await lendingPoolContract.deposit(assetData.tokenAddress, _amount, _address, _referralCode)\n    } if(type === \"withdraw\") {\n      hash = await lendingPoolContract.withdraw(assetData.tokenAddress, _amount, _address)\n    } if(type === \"borrow\") {\n      hash = await lendingPoolContract.borrow(assetData.tokenAddress, _amount, borrowType, 0, _address )\n    } if(type === \"repay\") {\n      hash = await lendingPoolContract.repay(assetData.tokenAddress, _amount, repayMode, _address)\n    } if(type === \"usage-as-collateral\" && usageAsCollateralEnabled) {\n      hash = await lendingPoolContract.setUserUseReserveAsCollateral(assetData.tokenAddress, !usageAsCollateral)\n    } if(type === \"swap-borrow-rate\") {\n      hash = await lendingPoolContract.swapBorrowRateMode(assetData.tokenAddress, assetData._reserveCurrentBalanceData.stableRateLastUpdated === 0 ? '2' : '1')\n    } if(type === \"approve\") {\n      hash = await erc20TokenContract.approve(LENDING_POOL_ADDRESS, _amount)\n    }\n\n    let _newAssetData = {};\n    let _transactionHash = hash.hash\n    _newAssetData = {_transactionHash, type}\n    setTransactionHash(_newAssetData)\n  };\n\n\n  let modal = (\n    <>\n\n      <div \n        onMouseEnter={() => { setButtonText(!apyType) }}\n        onMouseLeave={() => { setButtonText(!buttonText) }}\n        className={\n          usageAsCollateralEnabled || type === 'swap-borrow-rate'\n            ? apyTypeM\n              ? 'switch switch--green right' \n              : 'switch switch--green flex-end'         \n            : 'switch flex-center' \n        }\n      >\n\n\n        { transactionHash?._transactionHash\n          ? <div style={{position: 'absolute', top: '15px', left: '15px'}}> <Loader /> </div> \n          : null\n        }\n        \n        {/* {transactionStatus ? <div style={{height: '0px', width: '75px'}}><img /><Confirmed /></div> : null} */}\n\n        <button\n          className={buttonClassNameChild}\n          style={{\n            background: type === 'swap-borrow-rate' \n              ? buttonText \n                ? 'var(--switch-green)' \n                : 'var(--btn-blue)'\n              : '' ,\n              color: '#fff'\n          }}\n          key=\"submit\"\n          type={type}\n          onClick={handleModalOk}\n        >\n          {!swapModeEnabled\n            ? type\n\n              : type === 'usage-as-collateral'\n                ? buttonText && usageAsCollateralEnabled\n                  ? 'Yes' \n                  : 'No'\n                  \n\n            : type === 'swap-borrow-rate'\n          }\n        </button>\n\n        {/* {transactingSubmit === false && <ModalStatusTransaction type={type} statusCode={transctionInfo} message='asd' />} */}\n\n      </div> \n\n    </>\n  )\n  //\n  return (\n    <>\n      { modal }\n    </>\n  )\n  //\n}\n\nexport default React.memo(AaveAction);\n","import React from 'react'\n\nimport { useContentContextState } from '~/Code/Components/content_context';\n\n//\nconst Transaction_status = ({\n    action,\n}) => {\n\n    const { \n\t\tactionTransactionDataState,\n\t} = useContentContextState();\n\tconst { transactionReceipt, transactionHash } = actionTransactionDataState\n\n    console.log('transactionHtransactionHashash', transactionReceipt)\n    console.log('2222', transactionHash)\n\n\n  return (\n\n        transactionReceipt?.status === 1 \n            ?\n            <div className=\"detail__top mb-40 text-center\">\n                <h2 className=\"title mb-20\">\n                    {action} confirmed\n                </h2>\n                <p className='description mb-20'>\n                    Wiew transaction info   \n                </p>\n                <a \n                    style={{width: '100%'}} \n                    className='text-center' \n                    target=\"_blank\" \n                    rel=\"nofollow\" \n                    href={ \n                        window.ethereum?.chainId === \"0x38\" \n                            ? 'https://bscscan.com/tx/'\n                            : 'https://polygonscan.com/tx/' \n                        + transactionReceipt?.transactionHash\n                    }\n                >\n                    Etherscan\n                </a>\n            </div>\n               \n\n            : <div className=\"detail__top mb-40 text-center\">\n                  <h2 className=\"title mb-20\">\n                      {action} overview\n                  </h2>\n                  <p className=\"description\">\n                      These are your transaction details. Make sure to check if this is correct before submitting.\n                  </p>\n              </div>\n    \n  )\n\n\n}\n\nexport default Transaction_status"],"sourceRoot":""}