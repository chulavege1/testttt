{"version":3,"sources":["webpack:///./src/Code/Components/Content/Deposit/DepositHeader.js","webpack:///./src/Code/Components/base/UsdPrice/UsdPrice.js","webpack:///./src/Code/helpers/symbol_formated/numberWithPoints.js","webpack:///./src/Code/Components/Content/poolData-helpers/AaveAction.jsx","webpack:///./src/Code/Components/base/Transaction_status/Transaction_status.js"],"names":["Web3","require","Apy_apr","DepositHeader","selectedProvider","assetDataOneReserves","useContentContextState","setOnePoolDataState","symbol","useParams","Date","toString","substring","console","log","useState","minimizeWindow","setMinimazeWindow","series","name","apy_data","apy_type","data","apy","options","chart","height","width","type","zoom","enabled","theme","mode","window","localStorage","palette","monochrome","color","shadeTo","shadeIntensity","dataLabels","stroke","curve","title","text","align","grid","row","colors","opacity","xaxis","categories","stateHistoryRate","assetData","reserveOverviewData","assetPrice","RAY","priceOracle","totalLiquidityInUsd","totalBorrowsInUsd","availableLiquidityInUsd","availableLiquidity","Number","utils","fromWei","decimals","toFixed","liquidityRate","stableRateAPY","totalStableDebt","variableRateAPY","variableBorrowRate","utilizationRate","slice","baseLTVasCollateral","ltv","_hex","liquidationThreshold","liquidationBonus","reserveLiquidationBonus","usageAsCollateralEnabled","depositAPR","isLoad","setIsLoad","useEffect","className","Icon","showImg","showSpan","symbolChild","directory","onClick","prevstate","Infinity","every2NumberPoint","UsdPrice","tableBool","offUsdSymbols","onlyAssetPrice","valueCalculate","reserveFactor","style","zIndex","React","memo","resultPriceFromOracleInUsdCurrentUserBalance","classNameChild","currentBalanceForUserTokenChildInWei","priceOracleETH","setPriceOracleETH","valCalcPriceOracle","undefined","x","replace","AaveAction","swapModeEnabled","amountFromRouteUrl","signer","buttonClassNameChild","setLiveAsset","lendingPool","usageAsCollateral","lendingPoolContract","styleChild","apyType","borrowType","repayMode","underluing","apyTypeM","setApyTypeM","buttonText","setButtonText","actionTransactionDataState","setTransactionHash","transactionHash","LENDING_POOL_ADDRESS","useStaticPoolDataContext","handleModalOk","a","mathOptionWithDec","userAmountSumm","toWei","_amount","getAddress","_address","erc20TokenContract","ethers","Contract","IErc20","_referralCode","deposit","tokenAddress","hash","withdraw","borrow","repay","setUserUseReserveAsCollateral","swapBorrowRateMode","_reserveCurrentBalanceData","stableRateLastUpdated","approve","_transactionHash","modal","onMouseEnter","onMouseLeave","position","top","left","background","key","Transaction_status","action","transactionReceipt","status","target","rel","href","ethereum","chainId"],"mappings":"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","file":"js/2.index.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\n//\nimport { every2NumberPoint, every3NumberCommas } from '~HELPERS/symbol_formated/numberWithPoints';\n//\nlet Web3 = require('web3');\nimport Chart from \"react-apexcharts\";\n\nconst Apy_apr = require('../poolData-helpers/Apy_apr.json')\nimport Deposot_APR from '~HELPERS/APR_APY/Deposot_APR'\n//\n// import { useAaveData } from \"../poolData-helpers/AaveData\";\n// import { useStaticPoolDataContext } from '~GRAPHQL/static_graph-pool-data-provider_formated';\nimport { useContentContextState } from '~/Code/Components/content_context';\n\nimport UsdPrice from '../../base/UsdPrice/UsdPrice';\nimport Icon from '../../base/icon/Icon';\n//\nconst DepositHeader = ({ selectedProvider }) => {\n// Context.\n    const { setOnePoolDataState } = useContentContextState()\n    const { assetDataOneReserves } = setOnePoolDataState\n\n    const { symbol } = useParams();\n\n    let date = new Date();\n    let dataToday = date.toString().substring(0, 11)\n    console.log('assetDataOneReservesdep', assetDataOneReserves)\n\n    const [minimizeWindow, setMinimazeWindow] = useState(false)\n\n    const [stateHistoryRate] = useState({\n        \n        series: [{\n            name: Apy_apr.apy_data[0].apy_type,\n            data: [...Apy_apr.apy_data[0].apy]\n        }],\n        options: {\n          chart: {\n            height: 430,\n            width: 30,\n            type: 'line',\n            zoom: {\n              enabled: false\n            }\n          },\n          theme: {\n            mode: window.localStorage.theme === \"theme--dark\" ? 'dark' : 'light', \n            palette: 'palette1', \n            monochrome: {\n                enabled: true,\n                color: '#775DD0',\n                shadeTo: 'light',\n                shadeIntensity: 0.65\n            },\n          },\n          dataLabels: {\n            enabled: false\n          },\n          stroke: {\n            curve: 'straight'\n          },\n          title: {\n            text: 'Historical rates APY',\n            align: 'left'\n          },\n          grid: {\n            row: {\n              colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\n              opacity: 0.9\n            },\n          },\n          xaxis: {\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep'],\n          }\n        },\n      \n    });\n//\n//\n    let assetData = assetDataOneReserves;\n    console.log('assetDataassetDataassetDataassetData', assetDataOneReserves)\n\n    // Client pool info.\n    let RAY = 10 ** 27 // 10 to the power 27\n\n    let totalLiquidityInUsd, totalBorrowsInUsd, availableLiquidityInUsd, reserveOverviewData, assetPrice;\n    if (assetData && assetDataOneReserves) {\n        // totalLiquidityInUsd = valueToBigNumber(assetData.totalLiquidity)\n        //     .multipliedBy(Web3.utils.fromWei(assetData.price.priceInEth, 'ether'))\n        //     .dividedBy(usdPrice.priceOracle.usdPriceEth)\n        //     .toString();\n        // totalBorrowsInUsd = valueToBigNumber(assetData.totalCurrentVariableDebt)\n        //     .multipliedBy(Web3.utils.fromWei(assetData.price.priceInEth, 'ether'))\n        //     .dividedBy(usdPrice.priceOracle.usdPriceEth)\n        //     .toString();\n        // availableLiquidityInUsd = valueToBigNumber(assetData.availableLiquidity)\n        //     .multipliedBy(Web3.utils.fromWei(assetData.price.priceInEth, 'ether'))\n        //     .dividedBy(usdPrice.priceOracle.usdPriceEth)\n        //     .toString();\n        assetPrice = assetDataOneReserves?.priceOracle.toString();\n        reserveOverviewData = {\n            totalLiquidityInUsd,\n            totalBorrowsInUsd,\n            availableLiquidityInUsd,\n            // totalLiquidity: assetData.totalLiquidity,\n            // totalBorrows: assetData.totalCurrentVariableDebt,\n            availableLiquidity: +assetDataOneReserves.availableLiquidity === 0 \n                ? '0'\n                : Number(Web3.utils.fromWei(assetDataOneReserves.availableLiquidity.toString(), (+assetDataOneReserves.decimals === 18 ? 'ether' : +assetDataOneReserves.decimals === 8 ? 'gwei' : 'mwei'))).toFixed(4)\n            ,\n            liquidityRate: assetDataOneReserves.liquidityRate.toString(),\n            // avg30DaysLiquidityRate: assetData.avg30DaysLiquidityRate,\n            stableRateAPY: assetDataOneReserves.totalStableDebt.toString(),\n            variableRateAPY: (Number(assetDataOneReserves.variableBorrowRate) / RAY),\n            // stableOverTotal: valueToBigNumber(assetData.totalStableDebt)\n                // .dividedBy(assetData.totalDebt)\n                // .toNumber(),\n            // variableOverTotal: valueToBigNumber(assetData.totalVariableDebt)\n            //     .dividedBy(assetData.totalDebt)\n            //     .toNumber(),\n            // avg30DaysVariableRate: assetData.avg30DaysVariableBorrowRate,\n            utilizationRate: +assetDataOneReserves.availableLiquidity === 0 || +assetDataOneReserves.liquidityRate === 0\n                ? '0 %'\n                : Number(((assetDataOneReserves.liquidityRate) / Web3.utils.fromWei(assetDataOneReserves.availableLiquidity.toString(), (+assetDataOneReserves.decimals === 18 ? 'ether' : +assetDataOneReserves.decimals === 8 ? 'gwei' : 'mwei'))).toString().slice(0, 10)).toFixed(2) + ' %'\n            ,\n            baseLTVasCollateral: Number(assetDataOneReserves.ltv._hex),\n            liquidationThreshold: Number(assetDataOneReserves.liquidationThreshold),\n            liquidationBonus: assetData.reserveLiquidationBonus,\n            usageAsCollateralEnabled: assetData.usageAsCollateralEnabled,\n            // stableBorrowRateEnabled: assetData.stableBorrowRateEnabled,\n            // borrowingEnabled: assetData.borrowingEnabled,\n        };\n    }\n    let depositAPR = Number((+assetDataOneReserves?.liquidityRate.toString() / RAY )) === 0 \n      ? '0 %' \n      : Number((+assetDataOneReserves?.liquidityRate / RAY) * 100).toFixed(4) + ' %'\n\n\n    // let hpFactor = new BigNumber(userAccountData?.healthFactor._hex)\n    // let ltv = new BigNumber(userAccountData?.ltv._hex)\n    const [isLoad, setIsLoad] = useState(false)\n\n\tuseEffect(() => {\n\t\tsetIsLoad(true)\n\t}, [])\n\n\n\n    return (\n        <>\n\n        {/* <div> Your balance in Aave { userOneReserve?.userReserves[0] ? Web3.utils.fromWei(userOneReserve?.userReserves[0]?.currentATokenBalance.toString(), 'ether') : '-' } </div>\n        <div> Your wallet balance { walletBalance && walletBalance.substring(0, 10) + ' ' + symbol}</div>\n        <div> Health factor { userAccountData ? Web3.utils.fromWei(hpFactor.toString(), 'ether').substring(0, 5) : '-' } </div> */}\n        \n        {/* <!-- card-top --> */}\n        <div className={`${ isLoad && assetDataOneReserves ? 'active_block' : 'hidden_block' }`}>\n\n        {assetDataOneReserves && <>\n            <div className=\"card__top card-top\">\n                <div className=\"card-top__left\">\n                    <div className=\"value\">Deposit { symbol }</div>\n                </div>\n                <div className=\"card-top__center hidden-md\">\n                    <div className=\"altcoin altcoin--card-top \">\n                        <Icon showImg={true} showSpan={false} symbolChild={symbol} directory={'/assets-main'} />\n                        <div className=\"altcoin__name value\">{ symbol } Reserve overview</div>\n                    </div>\n                </div>\n                <div className=\"card-top__right\">\n                    <button className={`expand  ${ !minimizeWindow ? 'active' : ''}` } onClick={() => setMinimazeWindow(prevstate => ( !prevstate )) } >\n                        {!minimizeWindow ? 'Minimize' : 'Expand'}\n                        <div className=\"expand__icon\">\n                            <span></span>\n                        </div>\n                    </button>\n                </div>\n            </div>\n\n\n    {/* <!-- card-content --> */}\n    <div className=\"card-top__content\">\n\n\n\n    { minimizeWindow &&\n        <div className=\"top-content__wrapper\">\n            <div className=\"top-content__body top-content__body--deposit\">\n                <div className=\"top-content__col flex-center-column\">\n                    <div className=\"label label--md mb-5\">Utilization rate</div>\n                    <div className=\"value\">{ \n                        assetDataOneReserves && reserveOverviewData.utilizationRate !== Infinity \n                            ? reserveOverviewData?.utilizationRate\n                            : '-' \n                    } \n                        <span className=\"remainder\"> </span>\n                    </div>\n                </div>\n                <div className=\"top-content__col flex-center-column\">\n                    <div className=\"label label--md mb-5\">Available liquidity</div>\n                    <div className=\"value\">{ reserveOverviewData.availableLiquidity.toString() } {symbol}</div>\n                </div>\n                <div className=\"top-content__col flex-center-column\">\n                    <div className=\"label label--md mb-5\">Deposit APR</div>\n                    <div className=\"value\">{ \n                            depositAPR\n                        }</div>\n                </div>\n                <div className=\"top-content__col flex-center-column\">\n                    <div className=\"label label--md mb-5\">Can be used as collateral</div>\n                    <div className=\"value value--green\">{ reserveOverviewData.usageAsCollateralEnabled ? 'Yes' : 'No' }</div>\n                </div>\n                <div className=\"top-content__col flex-center-column\">\n                    <div className=\"label label--md mb-5\">\n                        Maximum LTV\n                        <button className=\"label__info info\">\n                            <svg className=\"icon icon--info\">\n                                {/* <use xlink:href=\"img/sprite.svg#info\"></use> */}\n                            </svg>\n                        </button>\n                    </div>\n                    <div className=\"value\">{ assetDataOneReserves \n                        ? every2NumberPoint(reserveOverviewData?.baseLTVasCollateral.toString()) + ' %' \n                        : '-' } \n                    </div>\n                </div>\n                <div className=\"top-content__col flex-center-column\">\n                    <div className=\"label label--md mb-5\">Asset price</div>\n                    <div className=\"grid-row__right value\">\n                        <UsdPrice\n                            symbol={assetDataOneReserves?.symbol}\n                            tableBool={false}\n                            offUsdSymbols={true}\n                            onlyAssetPrice={true}\n                            valueCalculate={assetPrice}\n                            selectedProvider={selectedProvider}\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    }\n\n        \n\n    { !minimizeWindow && \n        <div className=\"card-top__detail top-detail\">\n            <div className=\"top-detail__body\">\n                <div className=\"top-detail__left\">\n                    <div className=\"top-detail__col\">\n                        {/* <!--  --> */}\n                        <div className=\"grid-row\">\n                            <div className=\"grid-row__left\">\n                                <div className=\"label label--md\">Utilization rate</div>\n                            </div>\n                            <div className=\"grid-row__right\">\n                                <div className=\"value\">{ \n                                    assetDataOneReserves && reserveOverviewData.utilizationRate !== Infinity \n                                        ? reserveOverviewData?.utilizationRate\n                                        : '-' \n                                    } \n                                    <span className=\"remainder\"> </span>\n                                </div>\n                            </div>\n                        </div>\n                        {/* <!--  --> */}\n                        <div className=\"grid-row\">\n                            <div className=\"grid-row__left\">\n                                <div className=\"label label--md\">Available liquidity</div>\n\n                            </div>\n                            <div className=\"grid-row__right\">\n                                <div className=\"value\">{ reserveOverviewData.availableLiquidity } {symbol}</div>\n                            </div>\n                        </div>\n                        {/* <!--  --> */}\n                        <div className=\"grid-row grid-row--gap-b-0\">\n                            <div className=\"grid-row__left\">\n                                <div className=\"label label--md\">Deposit APR</div>\n                            </div>\n                            <div className=\"grid-row__right\">\n                                <div className=\"value\">\n                                    {depositAPR}\n                                </div>\n                            </div>\n\n                            {/* <div className=\"grid-row__left\">\n                                <div className=\"label\">Past 30 day average</div>\n                            </div> */}\n                            \n                            {/* <div className=\"grid-row__right\">\n                                <div className=\"value value--sm\">{ reserveOverviewData.avg30DaysLiquidityRate?.substring(0, 4) || '-' }</div>\n                            </div> */}\n                        </div>\n                        {/* <!--  --> */}\n                        <div className=\"grid-row\">\n                            <div className=\"grid-row__left\">\n                                <div className=\"label label--md\">Can be used as collateral</div>\n                            </div>\n                            <div className=\"grid-row__right\">\n                                <div className=\"value value--green\">{ reserveOverviewData.usageAsCollateralEnabled ? 'Yes' : 'No' }</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"top-detail__col\">\n                        {/* <!--  --> */}\n                        <div className=\"grid-row\">\n                            <div className=\"grid-row__left\">\n                                <div className=\"label label--md\">Asset price</div>\n                            </div>\n                            <div className=\"grid-row__right value\">\n                                <UsdPrice \n                                    symbol={assetDataOneReserves?.symbol}\n                                    onlyAssetPrice={true}\n                                    tableBool={false} \n                                    offUsdSymbols={true} \n                                    valueCalculate={assetPrice} \n                                    selectedProvider={selectedProvider} \n                                />\n                            </div>\n\n                        </div>\n                        {/* <!--  --> */}\n                        <div className=\"grid-row\">\n                            <div className=\"grid-row__left\">\n                                <div className=\"label label--md\">\n                                    Maximum LTV\n                                    <button className=\"label__info info\">\n                                        <svg className=\"icon icon--info\">\n                                            {/* <use xlink:href=\"img/sprite.svg#info\"></use> */}\n                                        </svg>\n                                    </button>\n                                </div>\n                            </div>\n                            <div className=\"grid-row__right\">\n                                <div className=\"value\">{ every2NumberPoint(reserveOverviewData?.baseLTVasCollateral.toString()) + ' %' }</div>\n                            </div>\n                        </div>\n                        {/* <!--  --> */}\n                        <div className=\"grid-row\">\n                            <div className=\"grid-row__left\">\n                                <div className=\"label label--md\">\n                                    Liquidation threshold\n                                    <button className=\"label__info info\">\n                                        <svg className=\"icon icon--info\">\n                                            {/* <use xlink:href=\"img/sprite.svg#info\"></use> */}\n                                        </svg>\n                                    </button>\n                                </div>\n                            </div>\n                            <div className=\"grid-row__right\">\n                                <div className=\"value\">{ assetData ? every2NumberPoint(reserveOverviewData?.liquidationThreshold) + ' %' : '-' }</div>\n                            </div>\n                        </div>\n                        {/* <!--  --> */}\n                        <div className=\"grid-row\">\n                            <div className=\"grid-row__left\">\n                                <div className=\"label label--md\">\n                                    Reserve Factor\n                                    {/* <button className=\"label__info info\">\n                                        <svg className=\"icon icon--info\">\n                                        </svg>\n                                    </button> */}\n                                </div>\n                            </div>\n                            <div className=\"grid-row__right\">\n                                <div className=\"value\"> \n                                    {(\n                                        assetDataOneReserves?.reserveFactor.toString().slice(0, 2) + ' %'\n                                    )} \n                                </div>\n                            </div>\n                        </div>\n\n\n                    </div>\n                </div>\n\n\n                <div className=\"top-detail__right\">\n                    <div className=\"diagram\">\n                        \n                        <div className=\"diagram__body\">\n                        <div className=\"mixed-chart\" style={{zIndex: '333'}}>\n                            <Chart\n                                options={stateHistoryRate.options}\n                                series={stateHistoryRate.series}\n                                type=\"line\"\n                                height={230}\n                                // width={429}\n                            />\n                        </div>\n                        </div>\n                    </div>\n                </div> \n\n                \n                \n            </div>\n        </div>\n    }\n        \n\n\n                    </div>\n                </>\n                }\n            </div>\n        </>\n    )\n}\n\n\n\nexport default React.memo(DepositHeader)","import React from 'react';\nimport { useContentContextState } from '~/Code/Components/content_context';\n//\nlet Web3 = require('web3');\n// Props Api example.\n    // tableBool={true} decimals={value.decimals} currentBalanceForUserTokenChildInWei={token.balancee}\n    // offUsdSymbols={false} valueCalculate={value.price.priceInEth} selectedProvider={selectedProvider}\n//\nconst UsdPrice = ({\n    classNameChild,\n    valueCalculate, \n    tableBool, \n    offUsdSymbols,\n    currentBalanceForUserTokenChildInWei,\n}) => {\n// Context.\n    const { setPriceOracleETH } = useContentContextState();\n    const { priceOracleETH } = setPriceOracleETH\n//\n    let resultPriceFromOracleInUsdCurrentUserBalance;\n//\n    if(priceOracleETH) {\n        console.log('valCalcPriceOracle', priceOracleETH)\n        // Token price.\n        let valCalcPriceOracle = valueCalculate\n            ? Web3.utils.fromWei(valueCalculate.toString(), 'ether') \n            : 0\n        let activePriceForOneToken = valCalcPriceOracle * priceOracleETH\n\n        // Result for token price.\n        resultPriceFromOracleInUsdCurrentUserBalance = currentBalanceForUserTokenChildInWei // Gives prop with current balance? .\n            ? Number((currentBalanceForUserTokenChildInWei) * activePriceForOneToken).toFixed(2) // Active balance for ETH.\n            : Number(priceOracleETH * valCalcPriceOracle).toFixed(2) // Balance for ETH. \n        //\n    }\n\n//\n    return (\n        <div className={ classNameChild ? classNameChild : '' }>\n            {/* / / */}\n                { tableBool && '$ '}\n            {/* / / */}\n            { \n                // window?.ethereum.chainId === \"0x4\"\n                //     ? valueCalculate.length <= 18 ? resultFormatedValueForOneToken : resultPriceFromOracleInUsdCurrentUserBalance\n                //     : \n                resultPriceFromOracleInUsdCurrentUserBalance \n            }\n            {/* / / */}\n                { !tableBool && offUsdSymbols === undefined ? ' USD' : offUsdSymbols && ' USD' }\n            {/* / / */}\n        </div>\n    )\n//\n}\n\n\n//\nexport default React.memo(UsdPrice)","// Point every two characters.\nfunction every2NumberPoint(x) {\n    return x.toString().replace(/\\B(?=(\\d{2})+(?!\\d))/g, \".\");\n}\nfunction every3NumberCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n}\n\n\n\nexport { every2NumberPoint, every3NumberCommas }\n\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { parseUnits, formatUnits } from \"@ethersproject/units\";\nimport { ethers } from \"ethers\";\nimport { abi as IErc20 } from '~ABIs/abis/erc20.json';\n// Context.\nimport { useStaticPoolDataContext } from '~GRAPHQL/static_graph-pool-data-provider_formated';\nimport { useContentContextState } from '~/Code/Components/content_context';\n\n\nlet Web3 = require('web3');\nimport Loader from '~BASE/loader/loader'\n//\nfunction AaveAction({ swapModeEnabled, amountFromRouteUrl, assetData, signer, type, assetPrice, setLiveAsset, lendingPool, \n  buttonClassNameChild, usageAsCollateral, styleChild, \n  lendingPoolContract, apyType, borrowType, repayMode, usageAsCollateralEnabled }) {\n// - Block data.\n  // const { \n  //   userAccountData, \n  // } = useAaveData({ selectedProvider });\n  // - Context data\n// Get data from route.\n  let { underluing } = useParams();\n  // const [transactingError, setTransactingError] = useState(false)\n  const [apyTypeM, setApyTypeM] = useState()\n  useEffect(() => { setApyTypeM(apyType) }, [apyType])\n  // const [amount] = useState(amountFromRouteUrl)\n  const [buttonText, setButtonText] = useState()\n  useEffect(() => { setButtonText(apyType) }, [apyType])\n\n  // const [useMax, setUseMax] = useState(false)\n  // const [runningTransactions, setRunningTransactions] = useState()\n\n// Text status transaction\n  const { \n    actionTransactionDataState\n  } = useContentContextState()\n  const { \n    setTransactionHash, \n    transactionHash \n  } = actionTransactionDataState\n\n  const { LENDING_POOL_ADDRESS } = useStaticPoolDataContext()\n\n  //\n\t//\n\t\n//\n  const handleModalOk = async () => {\n    // let decimal = (assetData.decimals === 18) ? 'ether' : (assetData.decimals === 6) ? 'mwei' : 'gwei';\n    let mathOptionWithDec = +assetData.decimals === 18 ? 'ether' : +assetData.decimals === 8 ? 'gwei' : 'mwei'\n    let userAmountSumm = amountFromRouteUrl && Web3.utils.toWei(amountFromRouteUrl.toString(), mathOptionWithDec) // !!! FIX THERE !!!!!! 10 ** (17, PAST THERE FIX)!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n    let _amount = amountFromRouteUrl?.toString() === \"-1\" ? \n        type === 'withdraw'\n          ? '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'\n          : '0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' \n      : userAmountSumm\n\n    let _address = await signer.getAddress()\n    let erc20TokenContract = underluing && new ethers.Contract(underluing, IErc20, signer);\n    let hash\n    let _referralCode = '0'.toString()\n\n    if(type === \"deposit\") {\n      hash = await lendingPoolContract.deposit(assetData.tokenAddress, _amount, _address, _referralCode)\n    } if(type === \"withdraw\") {\n      hash = await lendingPoolContract.withdraw(assetData.tokenAddress, _amount, _address)\n    } if(type === \"borrow\") {\n      hash = await lendingPoolContract.borrow(assetData.tokenAddress, _amount, borrowType, 0, _address )\n    } if(type === \"repay\") {\n      hash = await lendingPoolContract.repay(assetData.tokenAddress, _amount, repayMode, _address)\n    } if(type === \"usage-as-collateral\" && usageAsCollateralEnabled) {\n      hash = await lendingPoolContract.setUserUseReserveAsCollateral(assetData.tokenAddress, !usageAsCollateral)\n    } if(type === \"swap-borrow-rate\") {\n      hash = await lendingPoolContract.swapBorrowRateMode(assetData.tokenAddress, assetData._reserveCurrentBalanceData.stableRateLastUpdated === 0 ? '2' : '1')\n    } if(type === \"approve\") {\n      hash = await erc20TokenContract.approve(LENDING_POOL_ADDRESS, _amount)\n    }\n\n    let _newAssetData = {};\n    let _transactionHash = hash.hash\n    _newAssetData = {_transactionHash, type}\n    setTransactionHash(_newAssetData)\n  };\n\n\n  let modal = (\n    <>\n\n      <div \n        onMouseEnter={() => { setButtonText(!apyType) }}\n        onMouseLeave={() => { setButtonText(!buttonText) }}\n        className={\n          usageAsCollateralEnabled || type === 'swap-borrow-rate'\n            ? apyTypeM\n              ? 'switch switch--green right' \n              : 'switch switch--green flex-end'         \n            : 'switch flex-center' \n        }\n      >\n\n\n        { transactionHash?._transactionHash\n          ? <div style={{position: 'absolute', top: '15px', left: '15px'}}> <Loader /> </div> \n          : null\n        }\n        \n        {/* {transactionStatus ? <div style={{height: '0px', width: '75px'}}><img /><Confirmed /></div> : null} */}\n\n        <button\n          className={buttonClassNameChild}\n          style={{\n            background: type === 'swap-borrow-rate' \n              ? buttonText \n                ? 'var(--switch-green)' \n                : 'var(--btn-blue)'\n              : '' ,\n              color: '#fff'\n          }}\n          key=\"submit\"\n          type={type}\n          onClick={handleModalOk}\n        >\n          {!swapModeEnabled\n            ? type\n\n              : type === 'usage-as-collateral'\n                ? buttonText && usageAsCollateralEnabled\n                  ? 'Yes' \n                  : 'No'\n                  \n\n            : type === 'swap-borrow-rate'\n          }\n        </button>\n\n        {/* {transactingSubmit === false && <ModalStatusTransaction type={type} statusCode={transctionInfo} message='asd' />} */}\n\n      </div> \n\n    </>\n  )\n  //\n  return (\n    <>\n      { modal }\n    </>\n  )\n  //\n}\n\nexport default React.memo(AaveAction);\n","import React from 'react'\n\nimport { useContentContextState } from '~/Code/Components/content_context';\n\n//\nconst Transaction_status = ({\n    action,\n}) => {\n\n    const { \n\t\tactionTransactionDataState,\n\t} = useContentContextState();\n\tconst { transactionReceipt, transactionHash } = actionTransactionDataState\n\n    console.log('transactionHtransactionHashash', transactionReceipt)\n    console.log('2222', transactionHash)\n\n\n  return (\n\n        transactionReceipt?.status === 1 \n            ?\n            <div className=\"detail__top mb-40 text-center\">\n                <h2 className=\"title mb-20\">\n                    {action} confirmed\n                </h2>\n                <p className='description mb-20'>\n                    Wiew transaction info   \n                </p>\n                <a \n                    style={{width: '100%'}} \n                    className='text-center' \n                    target=\"_blank\" \n                    rel=\"nofollow\" \n                    href={ \n                        window.ethereum?.chainId === \"0x38\" \n                            ? 'https://bscscan.com/tx/'\n                            : 'https://polygonscan.com/tx/' \n                        + transactionReceipt?.transactionHash\n                    }\n                >\n                    Etherscan\n                </a>\n            </div>\n               \n\n            : <div className=\"detail__top mb-40 text-center\">\n                  <h2 className=\"title mb-20\">\n                      {action} overview\n                  </h2>\n                  <p className=\"description\">\n                      These are your transaction details. Make sure to check if this is correct before submitting.\n                  </p>\n              </div>\n    \n  )\n\n\n}\n\nexport default Transaction_status"],"sourceRoot":""}